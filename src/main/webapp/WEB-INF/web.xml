<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">

	<!--web.xml加载顺序  context-param -> listener -> filter -> servlet -->

	<!-- 机器人 -->
	<servlet>
		<servlet-name>RobotServlet</servlet-name>
		<servlet-class>com.team.gaoguangjin.robot.RobotServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>RobotServlet</servlet-name>
		<url-pattern>/ggj/RobotServlet</url-pattern>
	</servlet-mapping>

	<!-- ioc -->
	<servlet>
		<servlet-name>refactTest</servlet-name>
		<servlet-class>com.team.gaoguangjin.javabase.servlet.ioc.service.MainTest</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>refactTest</servlet-name>
		<url-pattern>/refactTest</url-pattern>
	</servlet-mapping>

	<!-- hadoop就只用一个servlet去控制 ,load-on-startup web.xml启动时候就加载，值越大越在后面加载-->
	<servlet>
		<servlet-name>hadoop</servlet-name>
		<servlet-class>com.team.hadoop.web.HadoopServlet</servlet-class>
		<init-param>
			<param-name>hadoop</param-name>
			<param-value>hadoop是个非常强大的东东！</param-value>
		</init-param>
		<load-on-startup>0</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>hadoop</servlet-name>
		<url-pattern>/ggj/hadoop</url-pattern>
	</servlet-mapping>

	<!-- 帮助陆辉的那个查询页面 -->
	<servlet>
		<servlet-name>QueryServlet</servlet-name>
		<servlet-class>com.team.gaoguangjin.help.QueryServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>QueryServlet</servlet-name>
		<url-pattern>/ggj/QueryServlet</url-pattern>
	</servlet-mapping>

	<!--测试线程servlet线程安全用到的 -->
	<servlet>
		<servlet-name>ThreadServlet</servlet-name>
		<servlet-class>com.team.gaoguangjin.thread.testservlet.ThreadServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ThreadServlet</servlet-name>
		<url-pattern>/ggj/ThreadServlet</url-pattern>
	</servlet-mapping>
	
	<!--测试并发concurrent用的 -->
	<servlet>
		<servlet-name>concurrent</servlet-name>
		<servlet-class>com.team.gaoguangjin.javabase.servlet.bingfa.ConcurrentServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>concurrent</servlet-name>
		<url-pattern>/ggj/concurrent</url-pattern>
	</servlet-mapping>
	
	
	

	<filter>
		<description>微信消息接入接口</description>
		<filter-name>WeixinUrlFilter</filter-name>
		<filter-class>com.team.gaoguangjin.weixin.WeixinUrlFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>WeixinUrlFilter</filter-name>
		<url-pattern>/gaoguangjin/weixin</url-pattern>
	</filter-mapping>
	
	<!--listener -->
	<listener>
		<listener-class>com.team.gaoguangjin.javabase.servlet.listener.ListenerTest</listener-class>
	</listener>
	
	

	

	<!--模仿有道页面 spring配置文件 -->
	<!-- youdao.root为根目录的地址，一般在tomact的webapp，配置这个是找到写日志文件的根目录用到 -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>youdao.root</param-value>
	</context-param>
	<!-- Log4j 配置文件位置 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:/youdao/log4j.properties</param-value>
	</context-param>

	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>

	<!-- classpath是指 WEB-INF文件夹下的classes目录 -->
	<!-- Spring配置文件位置 参数定义了要装入的 Spring 配置文件 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- 本地用的spring配置项 -->
		<param-value>classpath:/youdao/*.xml,classpath:/camel/camel.xml</param-value>
		<!-- <param-value>classpath:springwithoutjdbc.xml</param-value> -->
	</context-param>

	<!--Spring Log4J 监听配置装载 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!--spring监听器 ,在启动过程中,Spring 会使用一个默认的WebApplicationContext实现作为IoC容器，就是XmlWebApplicationContext-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!--utf-8 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<!-- Spring MVC -->
	<servlet>
		<servlet-name>springMvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!-- 本地用的spring配置项 
			<param-value>classpath:/youdao/youdaospring-dispatcherservlet.xml</param-value> -->
			 <!-- 带camel 测试 -->
			<param-value>classpath:/youdao/youdaospring-dispatcherservlet.xml,classpath:/camel/camel.xml</param-value>
			
			<!-- 没用jdbc在服务器上用的 -->
			<!-- <param-value>classpath:springwithoutjdbc.xml</param-value> -->
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>springMvc</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>springMvc</servlet-name>
		<url-pattern>/yd/*</url-pattern>
	</servlet-mapping>
	
	
	<!-- 缓存、gzip压缩核心过滤器 -->
	<filter>
		<filter-name>PageEhCacheFilter</filter-name>
		<filter-class>com.team.gaoguangjin.缓存.ehcahe.PageEhcacheFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>PageEhCacheFilter</filter-name>
		<url-pattern>/gaoguangjin/cache/*</url-pattern>
	</filter-mapping>
	
	<!-- session失效时间：二小时 -->
	<session-config>
		<session-timeout>120</session-timeout>
	</session-config>
	<welcome-file-list>
		<!--ggjlovezjy.index页面 <welcome-file>gaoguangjin/zjy/index.jsp</welcome-file> -->
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>

