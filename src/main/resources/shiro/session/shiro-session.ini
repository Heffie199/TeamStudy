[main]
#sessionManager=org.apache.shiro.web.session.mgt.ServletContainerSessionManager
#自定义一些session信息
sessionIdCookie=org.apache.shiro.web.servlet.SimpleCookie
sessionManager=org.apache.shiro.web.session.mgt.DefaultWebSessionManager
#设置Cookie名字，默认为JSESSIONID；
sessionIdCookie.name=sid
#sessionIdCookie.domain=sishuok.com
#sessionIdCookie.path=
sessionIdCookie.maxAge=1800
sessionIdCookie.httpOnly=true
sessionManager.sessionIdCookie=$sessionIdCookie
sessionManager.sessionIdCookieEnabled=true
#会话管理器 DefaultSessionManager javaSE  ServletContainerSessionManager 
# DefaultWebSecurityManager使用的默认实现，用于Web环境，其直接使用Servlet容器的会话
#DefaultWebSessionManager：用于Web环境的实现，可以替代ServletContainerSessionManager，自己维护着会话，直接废弃了Servlet容器的会话管理。
securityManager.sessionManager=$sessionManager


#会话监听器用于监听会话创建、过期及停止事件
sessionListener1=com.team.gaoguangjin.shiro.session.web.listener.MySessionListener1
sessionListener2=com.team.gaoguangjin.shiro.session.web.listener.MySessionListener2
sessionManager.sessionListeners=$sessionListener1,$sessionListener2

#会话存储/持久化 将会话保存到数据库
sessionDAO=com.team.gaoguangjin.shiro.session.session.dao.MySessionDao

#Shiro提供了使用Ehcache进行会话存储，Ehcache可以配合TerraCotta实现容器无关的分布式集群。
#sessionDAO=org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO  

sessionIdGenerator=org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator
sessionDAO.sessionIdGenerator=$sessionIdGenerator
sessionManager.sessionDAO=$sessionDAO
cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
cacheManager.cacheManagerConfigFile=classpath:shiro/session/ehcache.xml
securityManager.cacheManager = $cacheManager


#会话验证.Shiro提供了会话验证调度器，用于定期的验证会话是否已过期

#设置全局会话超时时间，默认30分钟，即如果30分钟内没有访问会话将过期；
sessionManager.globalSessionTimeout=1800000
#是否开启会话验证器，默认是开启的
sessionManager.sessionValidationSchedulerEnabled=true
#会话验证调度器，sessionManager默认就是使用ExecutorServiceSessionValidationScheduler
#sessionValidationScheduler=org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler
#设置调度时间间隔，单位毫秒，默认就是1小时
#sessionValidationScheduler.interval = 100000
#设置会话验证调度器进行会话验证时的会话管理器
#sessionValidationScheduler.sessionManager=$sessionManager

#Shiro也提供了使用Quartz会话验证调度器,使用时需要导入shiro-quartz依赖：
#sessionValidationScheduler=org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler
#sessionValidationScheduler.sessionValidationInterval = 1000000
#sessionValidationScheduler.sessionManager=$sessionManager

#自定义会话验证调度器，如果会话比较多，会影响性能；可以考虑如分页获取会话并进行验证，
sessionValidationScheduler=com.team.gaoguangjin.shiro.session.session.scheduler.MySessionValidationScheduler
sessionValidationScheduler.interval = 1000000
sessionValidationScheduler.sessionManager=$sessionManager

sessionManager.sessionValidationScheduler=$sessionValidationScheduler
#会话过期时是否删除过期的会话
sessionManager.deleteInvalidSessions=true

#sessionFactory创建会话的工厂，根据相应的Subject上下文信息来创建会话
sessionFactory=org.apache.shiro.session.mgt.OnlineSessionFactory
sessionManager.sessionFactory=$sessionFactory

securityManager.subjectDAO.sessionStorageEvaluator.sessionStorageEnabled = false

[filters]
online=org.apache.shiro.session.filter.OnlineSessionFilter
online.forceLogoutUrl=/login.jsp
online.sessionDAO=$sessionDAO


[users]
zhang=123,admin
wang=123

[roles]
admin=user:*,menu:*

[urls]
/logout=logout
/login.jsp=authc
/**=anon